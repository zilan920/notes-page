const e=JSON.parse('{"key":"v-3ca585ce","path":"/contents/learning/golang.html","title":"go语言学习笔记","lang":"zh-CN","frontmatter":{"article":false,"title":"go语言学习笔记","icon":"read","description":"go 数据结构 切片和数组 slice 的底层是数组，是对数组的封装，可以用于描述数组的一个片段，两者都可以用于描述。 数组是定长的，而切片则可以动态的扩容。 在存储上，数组是一片连续的内存，而 slice 实质上是一个结构体。他的结构如下： 切片的扩容; 当我们向 slice 中追加了元素后，如果空间不足时就会引起扩容。 按照以往常见的说法，在 go...","head":[["meta",{"property":"og:url","content":"https://notes-page-mu.vercel.app/contents/learning/golang.html"}],["meta",{"property":"og:site_name","content":"我的笔记"}],["meta",{"property":"og:title","content":"go语言学习笔记"}],["meta",{"property":"og:description","content":"go 数据结构 切片和数组 slice 的底层是数组，是对数组的封装，可以用于描述数组的一个片段，两者都可以用于描述。 数组是定长的，而切片则可以动态的扩容。 在存储上，数组是一片连续的内存，而 slice 实质上是一个结构体。他的结构如下： 切片的扩容; 当我们向 slice 中追加了元素后，如果空间不足时就会引起扩容。 按照以往常见的说法，在 go..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-15T09:26:43.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-15T09:26:43.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"go 数据结构","slug":"go-数据结构","link":"#go-数据结构","children":[]},{"level":2,"title":"接口 Interface","slug":"接口-interface","link":"#接口-interface","children":[]},{"level":2,"title":"Channel","slug":"channel","link":"#channel","children":[]},{"level":2,"title":"go 标准库","slug":"go-标准库","link":"#go-标准库","children":[]},{"level":2,"title":"调度器","slug":"调度器","link":"#调度器","children":[]},{"level":2,"title":"GC","slug":"gc","link":"#gc","children":[]},{"level":2,"title":"编译与运行","slug":"编译与运行","link":"#编译与运行","children":[{"level":3,"title":"阅读","slug":"阅读","link":"#阅读","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]}],"git":{"createdTime":1670467117000,"updatedTime":1671096403000,"contributors":[{"name":"zilan920","email":"zilan920@126.com","commits":9},{"name":"zihan.fang","email":"zihan.fang@bybit.com","commits":1}]},"readingTime":{"minutes":10.01,"words":3003},"autoDesc":true,"filePathRelative":"contents/learning/golang.md","localizedDate":"2022年12月8日"}');export{e as data};

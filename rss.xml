<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://notes-page-mu.vercel.app/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://notes-page-mu.vercel.app/rss.xml" rel="self" type="application/rss+xml"/>
    <title>我的笔记</title>
    <link>https://notes-page-mu.vercel.app/</link>
    <description>我的笔记</description>
    <language>zh-CN</language>
    <pubDate>Mon, 27 May 2024 14:51:19 GMT</pubDate>
    <lastBuildDate>Mon, 27 May 2024 14:51:19 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <item>
      <title>Leetcode</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/leetcode.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/leetcode.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">Leetcode</source>
      <description>数据结构 数组 移除元素 func removeElement(nums []int, val int) int { slow, fast := 0, 0 for fast &amp;lt; len(nums) { if nums[fast] != val { nums[slow] = nums[fast] slow ++ } fast ++ } return slow }</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 数据结构</h2>
<h3> 数组</h3>
<ul>
<li><a href="https://leetcode.cn/problems/remove-element/description/" target="_blank" rel="noopener noreferrer">移除元素</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><a href="https://leetcode.cn/problems/move-zeroes/description" target="_blank" rel="noopener noreferrer">移动零</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><a href="https://leetcode.cn/problems/merge-intervals/description" target="_blank" rel="noopener noreferrer">合并区间</a></li>
</ul>
<h3> 链表</h3>
<ul>
<li><a href="https://leetcode.cn/problems/reverse-linked-list/description" target="_blank" rel="noopener noreferrer">反转链表</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><a href="https://leetcode.cn/problems/merge-two-sorted-lists/description" target="_blank" rel="noopener noreferrer">合并两个有序链表</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>
<p><a href="https://leetcode.cn/problems/merge-k-sorted-lists/description" target="_blank" rel="noopener noreferrer">合并K个升序链表</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/add-two-numbers/description" target="_blank" rel="noopener noreferrer">两数相加</a></p>
</li>
</ul>
<h3> 哈希表</h3>
<h3> 二叉树</h3>
<ul>
<li>
<p><a href="https://leetcode.cn/problems/invert-binary-tree/description" target="_blank" rel="noopener noreferrer">翻转二叉树</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/binary-tree-inorder-traversal/description" target="_blank" rel="noopener noreferrer">二叉树的中序遍历</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/binary-tree-level-order-traversal/description" target="_blank" rel="noopener noreferrer">二叉树的层序遍历</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/validate-binary-search-tree/description" target="_blank" rel="noopener noreferrer">验证二叉搜索树</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/flatten-binary-tree-to-linked-list/description" target="_blank" rel="noopener noreferrer">二叉树展开为链表</a></p>
</li>
</ul>
<h3> 字符串</h3>
<h3> 栈，堆与队列</h3>
<ul>
<li>
<p><a href="https://leetcode.cn/problems/valid-parentheses/description" target="_blank" rel="noopener noreferrer">有效的括号</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/min-stack/description" target="_blank" rel="noopener noreferrer">最小栈</a></p>
</li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><a href="https://leetcode.cn/problems/kth-largest-element-in-an-array/description" target="_blank" rel="noopener noreferrer">数组中第k大个元素</a></li>
</ul>
<h3> 数据结构设计</h3>
<ul>
<li>LRU</li>
</ul>
<h2> 算法</h2>
<h3> 贪心法</h3>
<h3> 回溯法</h3>
<ul>
<li><a href="https://leetcode.cn/problems/permutations/description" target="_blank" rel="noopener noreferrer">全排列</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><a href="https://leetcode.cn/problems/target-sum/description/" target="_blank" rel="noopener noreferrer">目标和</a> (回溯法)</li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> DFS</h3>
<ul>
<li><a href="https://leetcode.cn/problems/number-of-islands/description/" target="_blank" rel="noopener noreferrer">岛屿数量</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> BFS</h3>
<h3> 动态规划法</h3>
<ul>
<li><a href="https://leetcode.cn/problems/maximum-subarray/description" target="_blank" rel="noopener noreferrer">最大子数组和</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>
<p><a href="https://leetcode.cn/problems/climbing-stairs/description" target="_blank" rel="noopener noreferrer">爬楼梯</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/coin-change/description" target="_blank" rel="noopener noreferrer">换零钱</a></p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/longest-increasing-subsequence/description" target="_blank" rel="noopener noreferrer">最长递增子序列</a></p>
</li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><a href="https://leetcode.cn/problems/target-sum/description/" target="_blank" rel="noopener noreferrer">目标和</a> (转化为动态规划法：0-1背包问题)</li>
</ul>
<p>0-1背包：有n个物品，每个物品的体积为W[i]，价值为v[i]，每个物品最多选一个，求体积不超过capacity时的最大价值和</p>
<p>回溯三问：</p>
<ul>
<li>
<p>当前操作：枚举第i个物品时选或者不选</p>
<ul>
<li>选：剩余容量减少w[i]</li>
<li>不选：剩余容量不变</li>
</ul>
</li>
<li>
<p>子问题：在剩余容量为c时，从前i个物品中得到的最大价值和</p>
</li>
<li>
<p>下一个子问题：</p>
<ul>
<li>不选： 在剩余容量为c时，从前i-1个物品中得到的最大价值和</li>
<li>选：从剩余容量为c-w[i]时，从前i-1个物品中得到的最大价值和</li>
</ul>
</li>
</ul>
<p><code>dfs(i, c) = max(dfs(i-1, c), dfs(i-1, c-w[i]) + v[i])</code></p>
<p>常见变形</p>
<ul>
<li>
<p>至多装capacity，求方案数/最大价值和</p>
</li>
<li>
<p>恰好装capacity，求方案数/最大/最小价值和</p>
</li>
<li>
<p>至少装capacity，求方案数/最小价值和</p>
</li>
<li>
<p><a href="https://leetcode.cn/problems/coin-change/" target="_blank" rel="noopener noreferrer">零钱兑换</a></p>
</li>
</ul>
<h3> 二分搜索</h3>
<h3> 排序</h3>
<ul>
<li>快速排序</li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 算法技巧</h2>
<h3> 双指针</h3>
<ul>
<li><a href="https://leetcode.cn/problems/container-with-most-water/description" target="_blank" rel="noopener noreferrer">盛最多水的容器</a></li>
</ul>
<h3> 滑动窗口</h3>
<ul>
<li><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/description" target="_blank" rel="noopener noreferrer">无重复字符的最长子串</a></li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 前缀和与差分数组</h3>
<ul>
<li><a href="https://leetcode.cn/problems/subarray-sum-equals-k/description" target="_blank" rel="noopener noreferrer">和为 K 的子数组</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>剑指offer</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%89%91%E6%8C%87offer.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%89%91%E6%8C%87offer.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">剑指offer</source>
      <description>剑指 Offer 题解 前言 题目来自《何海涛. 剑指 Offer[M]. 电子工业出版社, 2012.》，刷题网站推荐： 牛客网 Leetcode</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 剑指 Offer 题解</h1>
<h2> 前言</h2>
<p>题目来自《何海涛. 剑指 Offer[M]. 电子工业出版社, 2012.》，刷题网站推荐：</p>
<ul>
<li><a href="https://www.nowcoder.com/ta/coding-interviews?from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></li>
<li><a href="https://leetcode-cn.com/problemset/lcof/" target="_blank" rel="noopener noreferrer">Leetcode</a></li>
</ul>
<h2> 数组与矩阵</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/3.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97.html" target="blank">3. 数组中重复的数字</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/4.%20%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE.html" target="blank">4. 二维数组中的查找</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/5.%20%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC.html" target="blank">5. 替换空格</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/29.%20%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5.html" target="blank">29. 顺时针打印矩阵</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/50.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6%E4%BD%8D%E7%BD%AE.html" target="blank">50. 第一个只出现一次的字符位置</a></li>
</ul>
<h2> 栈队列堆</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/9.%20%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.html" target="blank">9. 用两个栈实现队列</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/30.%20%E5%8C%85%E5%90%AB%20min%20%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88.html" target="blank">30. 包含 min 函数的栈</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/31.%20%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E3%80%81%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97.html" target="blank">31. 栈的压入、弹出序列</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/40.%20%E6%9C%80%E5%B0%8F%E7%9A%84%20K%20%E4%B8%AA%E6%95%B0.html" target="blank">40. 最小的 K 个数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/41.1%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html" target="blank">41.1 数据流中的中位数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/41.2%20%E5%AD%97%E7%AC%A6%E6%B5%81%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6.html" target="blank">41.2 字符流中第一个不重复的字符</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/59.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html" target="blank">59. 滑动窗口的最大值</a></li>
</ul>
<h2> 双指针</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/57.1%20%E5%92%8C%E4%B8%BA%20S%20%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97.html" target="blank">57.1 和为 S 的两个数字</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/57.2%20%E5%92%8C%E4%B8%BA%20S%20%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B0%E5%BA%8F%E5%88%97.html" target="blank">57.2 和为 S 的连续正数序列</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/58.1%20%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97.html" target="blank">58.1 翻转单词顺序列</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/58.2%20%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html" target="blank">58.2 左旋转字符串</a></li>
</ul>
<h2> 链表</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/6.%20%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8.html" target="blank">6. 从尾到头打印链表</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/18.1%20%E5%9C%A8%20O(1)%20%E6%97%B6%E9%97%B4%E5%86%85%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9.html" target="blank">18.1 在 O(1) 时间内删除链表节点</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/18.2%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9.html" target="blank">18.2 删除链表中重复的结点</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/22.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%AC%20K%20%E4%B8%AA%E7%BB%93%E7%82%B9.html" target="blank">22. 链表中倒数第 K 个结点</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/23.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E7%BB%93%E7%82%B9.html" target="blank">23. 链表中环的入口结点</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/24.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html" target="blank">24. 反转链表</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/25.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8.html" target="blank">25. 合并两个排序的链表</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/35.%20%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6.html" target="blank">35. 复杂链表的复制</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/52.%20%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E7%BB%93%E7%82%B9.html" target="blank">52. 两个链表的第一个公共结点</a></li>
</ul>
<h2> 树</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/7.%20%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html" target="blank">7. 重建二叉树</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/8.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E7%BB%93%E7%82%B9.html" target="blank">8. 二叉树的下一个结点</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/26.%20%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84.html" target="blank">26. 树的子结构</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/27.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F.html" target="blank">27. 二叉树的镜像</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/28.%20%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html" target="blank">28. 对称的二叉树</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/32.1%20%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html" target="blank">32.1 从上往下打印二叉树</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/32.2%20%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%93%E5%8D%B0%E6%88%90%E5%A4%9A%E8%A1%8C.html" target="blank">32.2 把二叉树打印成多行</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/32.3%20%E6%8C%89%E4%B9%8B%E5%AD%97%E5%BD%A2%E9%A1%BA%E5%BA%8F%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html" target="blank">32.3 按之字形顺序打印二叉树</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/33.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97.html" target="blank">33. 二叉搜索树的后序遍历序列</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/34.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84.html" target="blank">34. 二叉树中和为某一值的路径</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/36.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%8E%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8.html" target="blank">36. 二叉搜索树与双向链表</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/37.%20%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91.html" target="blank">37. 序列化二叉树</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/54.%20%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E7%9A%84%E7%AC%AC%20K%20%E4%B8%AA%E7%BB%93%E7%82%B9.html" target="blank">54. 二叉查找树的第 K 个结点</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/55.1%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6.html" target="blank">55.1 二叉树的深度</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/55.2%20%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.html" target="blank">55.2 平衡二叉树</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/68.%20%E6%A0%91%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E4%BD%8E%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html" target="blank">68. 树中两个节点的最低公共祖先</a></li>
</ul>
<h2> 贪心思想</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/14.%20%E5%89%AA%E7%BB%B3%E5%AD%90.html" target="blank">14. 剪绳子</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/63.%20%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6.html" target="blank">63. 股票的最大利润</a></li>
</ul>
<h2> 二分查找</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/11.%20%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html" target="blank">11. 旋转数组的最小数字</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/53.%20%E6%95%B0%E5%AD%97%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html" target="blank">53. 数字在排序数组中出现的次数</a></li>
</ul>
<h2> 分治</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/16.%20%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9.html" target="blank">16. 数值的整数次方</a></li>
</ul>
<h2> 搜索</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/12.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html" target="blank">12. 矩阵中的路径</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/13.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4.html" target="blank">13. 机器人的运动范围</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/38.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97.html" target="blank">38. 字符串的排列</a></li>
</ul>
<h2> 排序</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/21.%20%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2.html" target="blank">21. 调整数组顺序使奇数位于偶数前面</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/45.%20%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0.html" target="blank">45. 把数组排成最小的数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/51.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%80%86%E5%BA%8F%E5%AF%B9.html" target="blank">51. 数组中的逆序对</a></li>
</ul>
<h2> 动态规划</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.1%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.html" target="blank">10.1 斐波那契数列</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.2%20%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96.html" target="blank">10.2 矩形覆盖</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.3%20%E8%B7%B3%E5%8F%B0%E9%98%B6.html" target="blank">10.3 跳台阶</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.4%20%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6.html" target="blank">10.4 变态跳台阶</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/42.%20%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C.html" target="blank">42. 连续子数组的最大和</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/47.%20%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC.html" target="blank">47. 礼物的最大价值</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/48.%20%E6%9C%80%E9%95%BF%E4%B8%8D%E5%90%AB%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html" target="blank">48. 最长不含重复字符的子字符串</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/49.%20%E4%B8%91%E6%95%B0.html" target="blank">49. 丑数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/60.%20n%20%E4%B8%AA%E9%AA%B0%E5%AD%90%E7%9A%84%E7%82%B9%E6%95%B0.html" target="blank">60. n 个骰子的点数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/66.%20%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84.html" target="blank">66. 构建乘积数组</a></li>
</ul>
<h2> 数学</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/39.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97.html" target="blank">39. 数组中出现次数超过一半的数字</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/62.%20%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0.html" target="blank">62. 圆圈中最后剩下的数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/43.%20%E4%BB%8E%201%20%E5%88%B0%20n%20%E6%95%B4%E6%95%B0%E4%B8%AD%201%20%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html" target="blank">43. 从 1 到 n 整数中 1 出现的次数</a></li>
</ul>
<h2> 位运算</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/15.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0.html" target="blank">15. 二进制中 1 的个数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/56.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.html" target="blank">56. 数组中只出现一次的数字</a></li>
</ul>
<h2> 其它</h2>
<ul>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/17.%20%E6%89%93%E5%8D%B0%E4%BB%8E%201%20%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84%20n%20%E4%BD%8D%E6%95%B0.html" target="blank">17. 打印从 1 到最大的 n 位数</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/19.%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D.html" target="blank">19. 正则表达式匹配</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/20.%20%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2.html" target="blank">20. 表示数值的字符串</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/44.%20%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97.html" target="blank">44. 数字序列中的某一位数字</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/46.%20%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html" target="blank">46. 把数字翻译成字符串</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/61.%20%E6%89%91%E5%85%8B%E7%89%8C%E9%A1%BA%E5%AD%90.html" target="blank">61. 扑克牌顺子</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/64.%20%E6%B1%82%201+2+3+...+n.html" target="blank">64. 求 1+2+3+...+n</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/65.%20%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95.html" target="blank">65. 不用加减乘除做加法</a></li>
<li><a href="/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/67.%20%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0.html" target="blank">67. 把字符串转换成整数</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>10.1 斐波那契数列</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.1%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.1%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">10.1 斐波那契数列</source>
      <description>10.1 斐波那契数列 题目链接 牛客网</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 10.1 斐波那契数列</h1>
<h2> 题目链接</h2>
<p><a href="https://www.nowcoder.com/practice/c6c7742f5ba7442aada113136ddea0c3?tpId=13&amp;tqId=11160&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>求斐波那契数列的第 n 项，n &lt;= 39。</p>
<!--<div align="center"><img src="https://latex.codecogs.com/gif.latex?f(n)=\left\{\begin{array}{rcl}0&&{n=0}\\1&&{n=1}\\f(n-1)+f(n-2)&&{n>1}\end{array}\right." class="mathjax-pic"/></div> <br> -->
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/45be9587-6069-4ab7-b9ac-840db1a53744.jpg" width="330px"> </div><br>
<h2> 解题思路</h2>
<p>如果使用递归求解，会重复计算一些子问题。例如，计算 f(4) 需要计算 f(3) 和 f(2)，计算 f(3) 需要计算 f(2) 和 f(1)，可以看到 f(2) 被重复计算了。</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c13e2a3d-b01c-4a08-a69b-db2c4e821e09.png" width="350px"> </div><br>
<p>递归是将一个问题划分成多个子问题求解，动态规划也是如此，但是动态规划会把子问题的解缓存起来，从而避免重复求解子问题。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>考虑到第 i 项只与第 i-1 和第 i-2 项有关，因此只需要存储前两项的值就能求解第 i 项，从而将空间复杂度由 O(N) 降低为 O(1)。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于待求解的 n 小于 40，因此可以将前 40 项的结果先进行计算，之后就能以 O(1) 时间复杂度得到第 n 项的值。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>10.2 矩形覆盖</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.2%20%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.2%20%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">10.2 矩形覆盖</source>
      <description>10.2 矩形覆盖 题目链接 牛客网</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 10.2 矩形覆盖</h1>
<h2> 题目链接</h2>
<p><a href="https://www.nowcoder.com/practice/72a5a919508a4251859fb2cfb987a0e6?tpId=13&amp;tqId=11163&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>我们可以用 2*1 的小矩形横着或者竖着去覆盖更大的矩形。请问用 n 个 2*1 的小矩形无重叠地覆盖一个 2*n 的大矩形，总共有多少种方法？</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/b903fda8-07d0-46a7-91a7-e803892895cf.gif" width="100px"> </div><br>
<h2> 解题思路</h2>
<p>当 n 为 1 时，只有一种覆盖方法：</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f6e146f1-57ad-411b-beb3-770a142164ef.png" width="100px"> </div><br>
<p>当 n 为 2 时，有两种覆盖方法：</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/fb3b8f7a-4293-4a38-aae1-62284db979a3.png" width="200px"> </div><br>
<p>要覆盖 2*n 的大矩形，可以先覆盖 2*1 的矩形，再覆盖 2*(n-1) 的矩形；或者先覆盖 2*2 的矩形，再覆盖 2*(n-2) 的矩形。而覆盖 2*(n-1) 和 2*(n-2) 的矩形可以看成子问题。该问题的递推公式如下：</p>
<!-- <div align="center"><img src="https://latex.codecogs.com/gif.latex?f(n)=\left\{\begin{array}{rcl}1&&{n=1}\\2&&{n=2}\\f(n-1)+f(n-2)&&{n>1}\end{array}\right." class="mathjax-pic"/></div> <br> -->
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/508c6e52-9f93-44ed-b6b9-e69050e14807.jpg" width="370px"> </div><br>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>10.3 跳台阶</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.3%20%E8%B7%B3%E5%8F%B0%E9%98%B6.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.3%20%E8%B7%B3%E5%8F%B0%E9%98%B6.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">10.3 跳台阶</source>
      <description>10.3 跳台阶 题目链接 牛客网</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 10.3 跳台阶</h1>
<h2> 题目链接</h2>
<p><a href="https://www.nowcoder.com/practice/8c82a5b80378478f9484d87d1c5f12a4?tpId=13&amp;tqId=11161&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>一只青蛙一次可以跳上 1 级台阶，也可以跳上 2 级。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9dae7475-934f-42e5-b3b3-12724337170a.png" width="380px"> </div><br>
<h2> 解题思路</h2>
<p>当 n = 1 时，只有一种跳法：</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/72aac98a-d5df-4bfa-a71a-4bb16a87474c.png" width="250px"> </div><br>
<p>当 n = 2 时，有两种跳法：</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1b80288d-1b35-4cd3-aa17-7e27ab9a2389.png" width="300px"> </div><br>
<p>跳 n 阶台阶，可以先跳 1 阶台阶，再跳 n-1 阶台阶；或者先跳 2 阶台阶，再跳 n-2 阶台阶。而 n-1 和 n-2 阶台阶的跳法可以看成子问题，该问题的递推公式为：</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/508c6e52-9f93-44ed-b6b9-e69050e14807.jpg" width="350px"> </div><br>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>10.4 变态跳台阶</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.4%20%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/10.4%20%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">10.4 变态跳台阶</source>
      <description>10.4 变态跳台阶 题目链接 牛客网</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 10.4 变态跳台阶</h1>
<h2> 题目链接</h2>
<p><a href="https://www.nowcoder.com/practice/22243d016f6b47f2a6928b4313c85387?tpId=13&amp;tqId=11162&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>一只青蛙一次可以跳上 1 级台阶，也可以跳上 2 级... 它也可以跳上 n 级。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cd411a94-3786-4c94-9e08-f28320e010d5.png" width="380px"> </div><br>
<h2> 解题思路</h2>
<h3> 动态规划</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 数学推导</h3>
<p>跳上 n-1 级台阶，可以从 n-2 级跳 1 级上去，也可以从 n-3 级跳 2 级上去...，那么</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同样，跳上 n 级台阶，可以从 n-1 级跳 1 级上去，也可以从 n-2 级跳 2 级上去... ，那么</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>综上可得</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>即</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>所以 f(n) 是一个等比数列</p>
<div class="language-source-java line-numbers-mode" data-ext="source-java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>11. 旋转数组的最小数字</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/11.%20%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/11.%20%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">11. 旋转数组的最小数字</source>
      <description>11. 旋转数组的最小数字 题目链接 牛客网</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 11. 旋转数组的最小数字</h1>
<h2> 题目链接</h2>
<p><a href="https://www.nowcoder.com/practice/9f3231a991af4f55b95579b44b7a01ba?tpId=13&amp;tqId=11159&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0038204c-4b8a-42a5-921d-080f6674f989.png" width="210px"> </div><br>
<h2> 解题思路</h2>
<p>将旋转数组对半分可以得到一个包含最小元素的新旋转数组，以及一个非递减排序的数组。新的旋转数组的长度是原数组的一半，从而将问题规模减少了一半，这种折半性质的算法的时间复杂度为 O(log<sub>2</sub>N)。</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/424f34ab-a9fd-49a6-9969-d76b42251365.png" width="300px"> </div><br>
<p>此时问题的关键在于确定对半分得到的两个数组哪一个是旋转数组，哪一个是非递减数组。我们很容易知道非递减数组的第一个元素一定小于等于最后一个元素。</p>
<p>通过修改二分查找算法进行求解（l 代表 low，m 代表 mid，h 代表 high）：</p>
<ul>
<li>当 nums[m] &lt;= nums[h] 时，表示 [m, h] 区间内的数组是非递减数组，[l, m] 区间内的数组是旋转数组，此时令 h = m；</li>
<li>否则 [m + 1, h] 区间内的数组是旋转数组，令 l = m + 1。</li>
</ul>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果数组元素允许重复，会出现一个特殊的情况：nums[l] == nums[m] == nums[h]，此时无法确定解在哪个区间，需要切换到顺序查找。例如对于数组 {1,1,1,0,1}，l、m 和 h 指向的数都为 1，此时无法知道最小数字 0 在哪个区间。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>12. 矩阵中的路径</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/12.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/12.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">12. 矩阵中的路径</source>
      <description>12. 矩阵中的路径 牛客网 题目描述 判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一个格子开始，每一步可以在矩阵中向上下左右移动一个格子。如果一条路径经过了矩阵中的某一个格子，则该路径不能再进入该格子。</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 12. 矩阵中的路径</h1>
<p><a href="https://www.nowcoder.com/practice/69fe7a584f0a445da1b6652978de5c38?tpId=13&amp;tqId=11218&amp;tab=answerKey&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一个格子开始，每一步可以在矩阵中向上下左右移动一个格子。如果一条路径经过了矩阵中的某一个格子，则该路径不能再进入该格子。</p>
<p>例如下面的矩阵包含了一条 bfce 路径。</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1db1c7ea-0443-478b-8df9-7e33b1336cc4.png" width="200px"> </div><br>
<h2> 解题思路</h2>
<p>使用回溯法（backtracking）进行求解，它是一种暴力搜索方法，通过搜索所有可能的结果来求解问题。回溯法在一次搜索结束时需要进行回溯（回退），将这一次搜索过程中设置的状态进行清除，从而开始一次新的搜索过程。例如下图示例中，从 f 开始，下一步有 4 种搜索可能，如果先搜索 b，需要将 b 标记为已经使用，防止重复使用。在这一次搜索结束之后，需要将 b 的已经使用状态清除，并搜索 c。</p>
<div align="center"> <img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dc964b86-7a08-4bde-a3d9-e6ddceb29f98.png" width="200px"> </div><br>
<p>本题的输入是数组而不是矩阵（二维数组），因此需要先将数组转换成矩阵。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>13. 机器人的运动范围</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/13.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/13.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">13. 机器人的运动范围</source>
      <description>13. 机器人的运动范围 牛客网 题目描述</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 13. 机器人的运动范围</h1>
<p><a href="https://www.nowcoder.com/practice/6e5207314b5241fb83f2329e89fdecc8?tpId=13&amp;tqId=11219&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>地上有一个 m 行和 n 列的方格。一个机器人从坐标 (0, 0) 的格子开始移动，每一次只能向左右上下四个方向移动一格，但是不能进入行坐标和列坐标的数位之和大于 k 的格子。</p>
<p>例如，当 k 为 18 时，机器人能够进入方格 (35,37)，因为 3+5+3+7=18。但是，它不能进入方格 (35,38)，因为 3+5+3+8=19。请问该机器人能够达到多少个格子？</p>
<h2> 解题思路</h2>
<p>使用深度优先搜索（Depth First Search，DFS）方法进行求解。回溯是深度优先搜索的一种特例，它在一次搜索过程中需要设置一些本次搜索过程的局部状态，并在本次搜索结束之后清除状态。而普通的深度优先搜索并不需要使用这些局部状态，虽然还是有可能设置一些全局状态。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>14. 剪绳子</title>
      <link>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/14.%20%E5%89%AA%E7%BB%B3%E5%AD%90.html</link>
      <guid>https://notes-page-mu.vercel.app/%E7%AE%97%E6%B3%95%E9%A2%98/jzoffer/14.%20%E5%89%AA%E7%BB%B3%E5%AD%90.html</guid>
      <source url="https://notes-page-mu.vercel.app/rss.xml">14. 剪绳子</source>
      <description>14. 剪绳子 题目链接 牛客网 题目描述 把一根绳子剪成多段，并且使得每段的长度乘积最大。 n = 2 return 1 (2 = 1 + 1) n = 10 return 36 (10 = 3 + 3 + 4)</description>
      <pubDate>Wed, 14 Feb 2024 10:17:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 14. 剪绳子</h1>
<h2> 题目链接</h2>
<p><a href="https://www.nowcoder.com/practice/57d85990ba5b440ab888fc72b0751bf8?tpId=13&amp;tqId=33257&amp;tab=answerKey&amp;from=cyc_github" target="_blank" rel="noopener noreferrer">牛客网</a></p>
<h2> 题目描述</h2>
<p>把一根绳子剪成多段，并且使得每段的长度乘积最大。</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 解题思路</h2>
<h3> 贪心</h3>
<p>尽可能得多剪长度为 3 的绳子，并且不允许有长度为 1 的绳子出现。如果出现了，就从已经切好长度为 3 的绳子中拿出一段与长度为 1 的绳子重新组合，把它们切成两段长度为 2 的绳子。以下为证明过程。</p>
<p>将绳子拆成 1 和 n-1，则 1(n-1)-n=-1&lt;0，即拆开后的乘积一定更小，所以不能出现长度为 1 的绳子。</p>
<p>将绳子拆成 2 和 n-2，则 2(n-2)-n = n-4，在 n&gt;=4 时这样拆开能得到的乘积会比不拆更大。</p>
<p>将绳子拆成 3 和 n-3，则 3(n-3)-n = 2n-9，在 n&gt;=5 时效果更好。</p>
<p>将绳子拆成 4 和 n-4，因为 4=2*2，因此效果和拆成 2 一样。</p>
<p>将绳子拆成 5 和 n-5，因为 5=2+3，而 5&lt;2*3，所以不能出现 5 的绳子，而是尽可能拆成 2 和 3。</p>
<p>将绳子拆成 6 和 n-6，因为 6=3+3，而 6&lt;3*3，所以不能出现 6 的绳子，而是拆成 3 和 3。这里 6 同样可以拆成 6=2+2+2，但是 3(n - 3) - 2(n - 2) = n - 5 &gt;= 0，在 n&gt;=5 的情况下将绳子拆成 3 比拆成 2 效果更好。</p>
<p>继续拆成更大的绳子可以发现都比拆成 2 和 3 的效果更差，因此我们只考虑将绳子拆成 2 和 3，并且优先拆成 3，当拆到绳子长度 n 等于 4 时，也就是出现 3+1，此时只能拆成 2+2。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 动态规划</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
  </channel>
</rss>